#!/bin/bash
#
# file is ruled by puppet. resistance is futile
#

#
# vars
#

user="$1"
sitename="$2"
user_pass="$(gpw 1 8)" 
nginx_template="/etc/add-site/nginx.template"
php_template="/etc/add-site/php-fpm.template"
nginx_conf="/etc/nginx/sites-available"
php_conf="/etc/php5/fpm/pool.d"
home="/home/$user"
mysqluser=debian-sys-maint
mysqlpass="$(cat /etc/mysql/debian.cnf|grep -m 1 password|cut -f3 -d' ')"
mysqlgenpass="$(pwgen -s 12 -1)"

# usage show
usage(){
	echo "$0 user sitename creates system user, set random password"
	echo "creates /home/\$user/www directory"
	echo "creates /etc/nginx/sites-available/\$user and"
	echo "/etc/php5/pfm/pool.d/\$user.conf from templates"
	echo "creates mysqlbase \$user and mysql user \$user"
	echo "grant all privileges to new user on new base"
	echo "generate password for new user and echo it on console"
}

#
#check args
#

function check_sitename_format {
	if !( echo "$sitename"|grep -q -E "^[a-z0-9][a-z.0-9\-]*[a-z]$"); then
		echo "invalid sitename format"
		usage
		exit 1
	fi
}

function check_sitename_exist {
	if [ -e $nginx_conf/"$1" ]; then
		echo "nginx config $nginx_conf/$1 already exists"
		exit 1
	fi
	if [ -e $php_conf/"$1" ]; then
		echo "php-fpm config $php_conf/$1 already exists"
		exit 1
	fi
}

#check number of args
case $# in
	2)
		check_sitename_format "$sitename"
		check_sitename_exist "$sitename"
		;;
	*)
		usage
		exit 1;
		;;
esac

# check username format
if !(echo "$user"|grep -q -E "^[a-z_][a-z0-9_\-]*[\$]?$"); then
	echo "ERROR: invalid username format"
	echo
	usage
	exit 1
fi

# check_username_exist
if (getent passwd|grep -q "$user"); then
	echo "ERROR: username already exist"
	echo
	usage
	exit 1
fi

#
# actions
#

function create_user {
	echo "creating system user $user"
	useradd -m -s/bin/bash -d$home $user
	echo "$user":"$user_pass" | chpasswd
	echo "System user password is: $user_pass"
	mkdir $home/www
	chown $user:www-data $home $home/www
	chmod 710 $home $home/www
	mkdir $home/log
	chown www-data:root $home/log
	chmod 755 $home/log
}

function create_site {
	echo "creating nginx config, php config, directory"
	sed "s/sitename-changeme/$sitename/g;s/username-changeme/$user/g" $nginx_template > $nginx_conf/"$user"
	sed "s/sitename-changeme/$sitename/g;s/username-changeme/$user/g" $php_template > $php_conf/"$user".conf
	nginx_ensite $user > /dev/null 2>&1
	cat <<EOF
You should check $nginx_conf/"$user" and $php_conf/"$user".conf
Next issue
# /etc/init.d/php5-fpm reload
# /etc/init.d/nginx reload
EOF
}


function create_mysqlbase {
	# check if database exist
	if (mysql -u "$mysqluser" -p"$mysqlpass" -e "show databases;"|grep -q "$user") then
		echo "mysqlbase $user already exists. Omitting database creation"
	else
		mysql -u "$mysqluser" -p"$mysqlpass" -e "CREATE DATABASE \`$user\`;"
		echo "mysqlbase $user created"
	fi
}

function create_mysqluser {
	# check if user exist
	if (mysql -u "$mysqluser" -p"$mysqlpass" -e "SELECT user, host FROM mysql.user WHERE host=\"localhost\" AND user=\"$user\";"|grep -q "$user") then
		echo "mysqluser $user already exists. Omitting user creation"
	else
		mysql -u "$mysqluser" -p"$mysqlpass" -e "CREATE USER \`$user\`@'localhost' IDENTIFIED BY \"$mysqlgenpass\";"
		echo "mysqluser $user created"
		mysql -u "$mysqluser" -p"$mysqlpass" -e "GRANT ALL PRIVILEGES ON \`$user\`.* TO \`$user\`@'localhost';"
		echo "granted all rights on db $user to user $user"
		echo "mysql password for user $user is: $mysqlgenpass"
	fi
}

# exec functions
create_user
create_site
create_mysqlbase
create_mysqluser

exit 0
